type Collateral @entity(immutable: false) {
  id: ID! # "collIndex", e.g. "0"
  collIndex: Int!
  token: Token!
  minCollRatio: BigInt!
  troves: [Trove!]! @derivedFrom(field: "collateral")
  addresses: CollateralAddresses! @derivedFrom(field: "collateral")
}

type Token @entity(immutable: true) {
  id: ID! # "collIndex", e.g. "0"
  collateral: Collateral!
  name: String!
  symbol: String!
  decimals: Int!
}

type CollateralAddresses @entity(immutable: true) {
  id: ID! # "collIndex", e.g. "0"
  borrowerOperations: Bytes!
  collateral: Collateral!
  sortedTroves: Bytes!
  stabilityPool: Bytes!
  token: Bytes!
  troveManager: Bytes!
  troveNft: Bytes!
}

type InterestRateBracket @entity(immutable: false) {
  id: ID! # "collIndex:rateFloored", e.g. "0:44000000000000000"
  collateral: Collateral!
  rate: BigInt!
  totalDebt: BigInt!
}

enum TroveStatus {
  active
  closed
  liquidated
  redeemed
}

type Trove @entity(immutable: false) {
  id: ID! # "collIndex:collId", e.g. 0:0x1731afc858cad2708001a4f71851f9f775729c22f47df7c4360b1e416fd0f2de
  borrower: Bytes!
  closedAt: BigInt
  collateral: Collateral!
  createdAt: BigInt!
  debt: BigInt!
  deposit: BigInt!
  interestBatch: InterestBatch
  interestRate: BigInt!
  stake: BigInt!
  status: TroveStatus!
  troveId: String!
  mightBeLeveraged: Boolean!
  updatedAt: BigInt!
}

type BorrowerInfo @entity(immutable: false) {
  id: ID! # "borrowerAddress", e.g. "0x0000000000000000000000000000000000000000"
  troves: Int!
  trovesByCollateral: [Int!]!
  nextOwnerIndexes: [Int!]!
}

type InterestBatch @entity(immutable: false) {
  id: ID! # "collIndex:batchManager", e.g. "0:0x0000000000000000000000000000000000000000"
  collateral: Collateral!
  batchManager: Bytes!
  debt: BigInt!
  coll: BigInt!
  annualInterestRate: BigInt!
  annualManagementFee: BigInt!
  troves: [Trove!]! @derivedFrom(field: "interestBatch")
}

type GovernanceUser @entity(immutable: false) {
  id: ID! # "userAddress", e.g. "0x0000000000000000000000000000000000000000"
  allocatedLQTY: BigInt!
  stakedLQTY: BigInt!
  stakedOffset: BigInt!
  allocations: [GovernanceAllocation!]! @derivedFrom(field: "user")
  allocated: [Bytes!]!
}

# Allocation of a user to a given initiative.
type GovernanceAllocation @entity(immutable: false) {
  id: ID! # "initiativeAddress:userAddress", e.g. "0x0000000000000000000000000000000000000000:0x0000000000000000000000000000000000000000"
  user: GovernanceUser!
  initiative: GovernanceInitiative!
  voteLQTY: BigInt!
  vetoLQTY: BigInt!
  atEpoch: BigInt!
}

type GovernanceInitiative @entity(immutable: false) {
  id: ID! # "initiativeAddress", e.g. "0x0000000000000000000000000000000000000000"
  lastClaimEpoch: BigInt
  lastVoteSnapshotEpoch: BigInt
  lastVoteSnapshotVotes: BigInt
  registeredAt: BigInt!
  registeredAtEpoch: BigInt!
  registrant: Bytes!
  unregisteredAt: BigInt
  unregisteredAtEpoch: BigInt
}
