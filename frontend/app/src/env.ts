import { z } from "zod";
import { EnvAddressAndBlockSchema, EnvCurrencySchema, EnvLinkSchema, zAddress } from "./zod-utils";

export const EnvSchema = z.object({
  APP_VERSION: z.string(),
  CHAIN_ID: z.string().transform((value) => {
    const parsed = parseInt(value, 10);
    if (isNaN(parsed)) {
      throw new Error(`Invalid chain ID: ${value}`);
    }
    return parsed;
  }),
  CHAIN_NAME: z.string(),
  CHAIN_CURRENCY: EnvCurrencySchema,
  CHAIN_RPC_URL: z.string().url(),
  CHAIN_BLOCK_EXPLORER: EnvLinkSchema.optional(),
  CHAIN_CONTRACT_ENS_REGISTRY: EnvAddressAndBlockSchema.optional(),
  CHAIN_CONTRACT_ENS_RESOLVER: EnvAddressAndBlockSchema.optional(),
  CHAIN_CONTRACT_MULTICALL: EnvAddressAndBlockSchema.optional(),
  COMMIT_HASH: z.string(),
  CONTRACT_ACTIVE_POOL: zAddress(),
  CONTRACT_BOLD_TOKEN: zAddress(),
  CONTRACT_BORROWER_OPERATIONS: zAddress(),
  CONTRACT_COLL_SURPLUS_POOL: zAddress(),
  CONTRACT_COLL_TOKEN: zAddress(),
  CONTRACT_DEFAULT_POOL: zAddress(),
  CONTRACT_FUNCTION_CALLER: zAddress(),
  CONTRACT_GAS_POOL: zAddress(),
  CONTRACT_HINT_HELPERS: zAddress(),
  CONTRACT_INTEREST_ROUTER: zAddress(),
  CONTRACT_PRICE_FEED: zAddress(),
  CONTRACT_SORTED_TROVES: zAddress(),
  CONTRACT_STABILITY_POOL: zAddress(),
  CONTRACT_TROVE_MANAGER: zAddress(),
  WALLET_CONNECT_PROJECT_ID: z.string(),
});

export type Env = z.infer<typeof EnvSchema>;

const parsedEnv = EnvSchema.parse({
  APP_VERSION: process.env.APP_VERSION, // set in next.config.js
  CHAIN_ID: process.env.NEXT_PUBLIC_CHAIN_ID,
  CHAIN_NAME: process.env.NEXT_PUBLIC_CHAIN_NAME,
  CHAIN_CURRENCY: process.env.NEXT_PUBLIC_CHAIN_CURRENCY,
  CHAIN_RPC_URL: process.env.NEXT_PUBLIC_CHAIN_RPC_URL,
  CHAIN_BLOCK_EXPLORER: process.env.NEXT_PUBLIC_CHAIN_BLOCK_EXPLORER,
  CHAIN_CONTRACT_ENS_REGISTRY: process.env.NEXT_PUBLIC_CHAIN_CONTRACT_ENS_REGISTRY,
  CHAIN_CONTRACT_ENS_RESOLVER: process.env.NEXT_PUBLIC_CHAIN_CONTRACT_ENS_RESOLVER,
  CHAIN_CONTRACT_MULTICALL: process.env.NEXT_PUBLIC_CHAIN_CONTRACT_MULTICALL,
  COMMIT_HASH: process.env.COMMIT_HASH, // set in next.config.js
  CONTRACT_ACTIVE_POOL: process.env.NEXT_PUBLIC_CONTRACT_ACTIVE_POOL,
  CONTRACT_BOLD_TOKEN: process.env.NEXT_PUBLIC_CONTRACT_BOLD_TOKEN,
  CONTRACT_BORROWER_OPERATIONS: process.env.NEXT_PUBLIC_CONTRACT_BORROWER_OPERATIONS,
  CONTRACT_COLL_SURPLUS_POOL: process.env.NEXT_PUBLIC_CONTRACT_COLL_SURPLUS_POOL,
  CONTRACT_COLL_TOKEN: process.env.NEXT_PUBLIC_CONTRACT_COLL_TOKEN,
  CONTRACT_DEFAULT_POOL: process.env.NEXT_PUBLIC_CONTRACT_DEFAULT_POOL,
  CONTRACT_FUNCTION_CALLER: process.env.NEXT_PUBLIC_CONTRACT_FUNCTION_CALLER,
  CONTRACT_GAS_POOL: process.env.NEXT_PUBLIC_CONTRACT_GAS_POOL,
  CONTRACT_HINT_HELPERS: process.env.NEXT_PUBLIC_CONTRACT_HINT_HELPERS,
  CONTRACT_INTEREST_ROUTER: process.env.NEXT_PUBLIC_CONTRACT_INTEREST_ROUTER,
  CONTRACT_PRICE_FEED: process.env.NEXT_PUBLIC_CONTRACT_PRICE_FEED,
  CONTRACT_SORTED_TROVES: process.env.NEXT_PUBLIC_CONTRACT_SORTED_TROVES,
  CONTRACT_STABILITY_POOL: process.env.NEXT_PUBLIC_CONTRACT_STABILITY_POOL,
  CONTRACT_TROVE_MANAGER: process.env.NEXT_PUBLIC_CONTRACT_TROVE_MANAGER,
  WALLET_CONNECT_PROJECT_ID: process.env.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID,
});

export const {
  APP_VERSION,
  CHAIN_ID,
  CHAIN_NAME,
  CHAIN_CURRENCY,
  CHAIN_RPC_URL,
  CHAIN_BLOCK_EXPLORER,
  CHAIN_CONTRACT_ENS_REGISTRY,
  CHAIN_CONTRACT_ENS_RESOLVER,
  CHAIN_CONTRACT_MULTICALL,
  COMMIT_HASH,
  CONTRACT_ACTIVE_POOL,
  CONTRACT_BOLD_TOKEN,
  CONTRACT_BORROWER_OPERATIONS,
  CONTRACT_COLL_SURPLUS_POOL,
  CONTRACT_COLL_TOKEN,
  CONTRACT_DEFAULT_POOL,
  CONTRACT_FUNCTION_CALLER,
  CONTRACT_GAS_POOL,
  CONTRACT_HINT_HELPERS,
  CONTRACT_INTEREST_ROUTER,
  CONTRACT_PRICE_FEED,
  CONTRACT_SORTED_TROVES,
  CONTRACT_STABILITY_POOL,
  CONTRACT_TROVE_MANAGER,
  WALLET_CONNECT_PROJECT_ID,
} = parsedEnv;
